=begin
#Elastic Email REST API

#This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>

The version of the OpenAPI document: 4.0.0
Contact: support@elasticemail.com
Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'

# Unit tests for ElasticEmail::SuppressionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SuppressionsApi' do
  before do
    # run before each test
    @api_instance = ElasticEmail::SuppressionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SuppressionsApi' do
    it 'should create an instance of SuppressionsApi' do
      expect(@api_instance).to be_instance_of(ElasticEmail::SuppressionsApi)
    end
  end

  # unit tests for suppressions_bounces_get
  # Get Bounce List
  # Retrieve your list of bounced emails. Required Access Level: ViewContacts, ViewSuppressions
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search Text fragment used for searching.
  # @option opts [Integer] :limit Maximum number of returned items.
  # @option opts [Integer] :offset How many items should be returned ahead.
  # @return [Array<Suppression>]
  describe 'suppressions_bounces_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for suppressions_bounces_import_post
  # Add Bounces Async
  # Add Bounced. Required Access Level: ModifyContacts, ModifySuppressions
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file 
  # @return [nil]
  describe 'suppressions_bounces_import_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for suppressions_bounces_post
  # Add Bounces
  # Add Bounced. Required Access Level: ModifyContacts, ModifySuppressions
  # @param request_body Emails to add as bounces. Limited to 1000 per request
  # @param [Hash] opts the optional parameters
  # @return [Array<Suppression>]
  describe 'suppressions_bounces_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for suppressions_by_email_delete
  # Delete Suppression
  # Delete Suppression. Required Access Level: ViewContacts, ViewSuppressions
  # @param email Proper email address.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'suppressions_by_email_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for suppressions_by_email_get
  # Get Suppression
  # Retrieve your suppression. Required Access Level: ViewContacts, ViewSuppressions
  # @param email Proper email address.
  # @param [Hash] opts the optional parameters
  # @return [Suppression]
  describe 'suppressions_by_email_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for suppressions_complaints_get
  # Get Complaints List
  # Retrieve your list of complaints. Required Access Level: ViewContacts, ViewSuppressions
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search Text fragment used for searching.
  # @option opts [Integer] :limit Maximum number of returned items.
  # @option opts [Integer] :offset How many items should be returned ahead.
  # @return [Array<Suppression>]
  describe 'suppressions_complaints_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for suppressions_complaints_import_post
  # Add Complaints Async
  # Add Complaints. Required Access Level: ModifyContacts, ModifySuppressions
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file 
  # @return [nil]
  describe 'suppressions_complaints_import_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for suppressions_complaints_post
  # Add Complaints
  # Add Complaints. Required Access Level: ModifyContacts, ModifySuppressions
  # @param request_body Emails to add as complaints. Limited to 1000 per request
  # @param [Hash] opts the optional parameters
  # @return [Array<Suppression>]
  describe 'suppressions_complaints_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for suppressions_get
  # Get Suppressions
  # Retrieve your suppressions. Required Access Level: ViewContacts, ViewSuppressions
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Maximum number of returned items.
  # @option opts [Integer] :offset How many items should be returned ahead.
  # @return [Array<Suppression>]
  describe 'suppressions_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for suppressions_unsubscribes_get
  # Get Unsubscribes List
  # Retrieve your list of unsubscribes. Required Access Level: ViewContacts, ViewSuppressions
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search Text fragment used for searching.
  # @option opts [Integer] :limit Maximum number of returned items.
  # @option opts [Integer] :offset How many items should be returned ahead.
  # @return [Array<Suppression>]
  describe 'suppressions_unsubscribes_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for suppressions_unsubscribes_import_post
  # Add Unsubscribes Async
  # Add Unsubscribes. Required Access Level: ModifyContacts, ModifySuppressions
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file 
  # @return [nil]
  describe 'suppressions_unsubscribes_import_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for suppressions_unsubscribes_post
  # Add Unsubscribes
  # Add Unsubscribes. Required Access Level: ModifyContacts, ModifySuppressions
  # @param request_body Emails to add as unsubscribes. Limited to 1000 per request
  # @param [Hash] opts the optional parameters
  # @return [Array<Suppression>]
  describe 'suppressions_unsubscribes_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end

=begin
#Elastic Email REST API

#This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>

The version of the OpenAPI document: 4.0.0
Contact: support@elasticemail.com
Generated by: https://openapi-generator.tech
Generator version: 7.5.0

=end

require 'spec_helper'
require 'json'

# Unit tests for ElasticEmail::SubAccountsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SubAccountsApi' do
  before do
    # run before each test
    @api_instance = ElasticEmail::SubAccountsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SubAccountsApi' do
    it 'should create an instance of SubAccountsApi' do
      expect(@api_instance).to be_instance_of(ElasticEmail::SubAccountsApi)
    end
  end

  # unit tests for subaccounts_by_email_credits_patch
  # Add, Subtract Email Credits
  # Update email credits of a subaccount by the given amount. Required Access Level: ModifySubAccounts
  # @param email Email address of Sub-Account
  # @param subaccount_email_credits_payload Amount of email credits to add or subtract from the current SubAccount email credits pool (positive or negative value)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'subaccounts_by_email_credits_patch test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subaccounts_by_email_delete
  # Delete SubAccount
  # Deletes specified SubAccount. An email will be sent to confirm this change. Required Access Level: ModifySubAccounts
  # @param email Email address of Sub-Account
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'subaccounts_by_email_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subaccounts_by_email_get
  # Load SubAccount
  # Returns details for the specified SubAccount. Required Access Level: ViewSubAccounts
  # @param email Email address of Sub-Account
  # @param [Hash] opts the optional parameters
  # @return [SubAccountInfo]
  describe 'subaccounts_by_email_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subaccounts_by_email_settings_email_put
  # Update SubAccount Email Settings
  # Update SubAccount email settings. Required Access Level: ModifySubAccounts
  # @param email 
  # @param subaccount_email_settings Updated Email Settings
  # @param [Hash] opts the optional parameters
  # @return [SubaccountEmailSettings]
  describe 'subaccounts_by_email_settings_email_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subaccounts_get
  # Load SubAccounts
  # Returns a list of all your SubAccounts. Required Access Level: ViewSubAccounts
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Maximum number of returned items.
  # @option opts [Integer] :offset How many items should be returned ahead.
  # @return [Array<SubAccountInfo>]
  describe 'subaccounts_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for subaccounts_post
  # Add SubAccount
  # Add a new SubAccount to your Account. To receive an access token for this SubAccount, make a POST security/apikeys request using the &#39;subaccount&#39; parameter. Required Access Level: ModifySubAccounts
  # @param subaccount_payload 
  # @param [Hash] opts the optional parameters
  # @return [SubAccountInfo]
  describe 'subaccounts_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end

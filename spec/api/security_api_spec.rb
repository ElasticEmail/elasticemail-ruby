=begin
#Elastic Email REST API

#This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>

The version of the OpenAPI document: 4.0.0
Contact: support@elasticemail.com
Generated by: https://openapi-generator.tech
Generator version: 7.5.0

=end

require 'spec_helper'
require 'json'

# Unit tests for ElasticEmail::SecurityApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SecurityApi' do
  before do
    # run before each test
    @api_instance = ElasticEmail::SecurityApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SecurityApi' do
    it 'should create an instance of SecurityApi' do
      expect(@api_instance).to be_instance_of(ElasticEmail::SecurityApi)
    end
  end

  # unit tests for security_apikeys_by_name_delete
  # Delete ApiKey
  # Delete your existing ApiKey. Required Access Level: Security
  # @param name Name of the ApiKey
  # @param [Hash] opts the optional parameters
  # @option opts [String] :subaccount Email of the subaccount of which ApiKey should be deleted
  # @return [nil]
  describe 'security_apikeys_by_name_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for security_apikeys_by_name_get
  # Load ApiKey
  # Load your existing ApiKey info. Required Access Level: Security
  # @param name Name of the ApiKey
  # @param [Hash] opts the optional parameters
  # @option opts [String] :subaccount Email of the subaccount of which ApiKey should be loaded
  # @return [ApiKey]
  describe 'security_apikeys_by_name_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for security_apikeys_by_name_put
  # Update ApiKey
  # Update your existing ApiKey. Required Access Level: Security
  # @param name Name of the ApiKey
  # @param api_key_payload 
  # @param [Hash] opts the optional parameters
  # @return [ApiKey]
  describe 'security_apikeys_by_name_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for security_apikeys_get
  # List ApiKeys
  # List all your existing ApiKeys. Required Access Level: Security
  # @param [Hash] opts the optional parameters
  # @option opts [String] :subaccount Email of the subaccount of which ApiKeys should be loaded
  # @return [Array<ApiKey>]
  describe 'security_apikeys_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for security_apikeys_post
  # Add ApiKey
  # Add a new ApiKey. Required Access Level: Security
  # @param api_key_payload 
  # @param [Hash] opts the optional parameters
  # @return [NewApiKey]
  describe 'security_apikeys_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for security_smtp_by_name_delete
  # Delete SMTP Credential
  # Delete your existing SMTP Credentials. Required Access Level: Security
  # @param name Name of the SMTP Credential
  # @param [Hash] opts the optional parameters
  # @option opts [String] :subaccount Email of the subaccount of which credential should be deleted
  # @return [nil]
  describe 'security_smtp_by_name_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for security_smtp_by_name_get
  # Load SMTP Credential
  # Load your existing SMTP Credential info. Required Access Level: Security
  # @param name Name of the SMTP Credential
  # @param [Hash] opts the optional parameters
  # @option opts [String] :subaccount Email of the subaccount of which credential should be loaded
  # @return [SmtpCredentials]
  describe 'security_smtp_by_name_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for security_smtp_by_name_put
  # Update SMTP Credential
  # Update your existing SMTP Credentials. Required Access Level: Security
  # @param name Name of the SMTP Credential
  # @param smtp_credentials_payload 
  # @param [Hash] opts the optional parameters
  # @return [SmtpCredentials]
  describe 'security_smtp_by_name_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for security_smtp_get
  # List SMTP Credentials
  # List all your existing SMTP Credentials. Required Access Level: Security
  # @param [Hash] opts the optional parameters
  # @option opts [String] :subaccount Email of the subaccount of which credentials should be listed
  # @return [Array<SmtpCredentials>]
  describe 'security_smtp_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for security_smtp_post
  # Add SMTP Credential
  # Add new SMTP Credential. Required Access Level: Security
  # @param smtp_credentials_payload 
  # @param [Hash] opts the optional parameters
  # @return [NewSmtpCredentials]
  describe 'security_smtp_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end

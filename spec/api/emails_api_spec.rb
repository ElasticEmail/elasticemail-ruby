=begin
#Elastic Email REST API

#This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a href=\"https://api.elasticemail.com/public/help\">here</a>.

The version of the OpenAPI document: 4.0.0
Contact: support@elasticemail.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for ElasticEmail::EmailsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'EmailsApi' do
  before do
    # run before each test
    @api_instance = ElasticEmail::EmailsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EmailsApi' do
    it 'should create an instance of EmailsApi' do
      expect(@api_instance).to be_instance_of(ElasticEmail::EmailsApi)
    end
  end

  # unit tests for emails_by_msgid_view_get
  # View Email
  # Returns email details for viewing or rendering. Required Access Level: None
  # @param msgid Message identifier
  # @param [Hash] opts the optional parameters
  # @return [EmailData]
  describe 'emails_by_msgid_view_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emails_mergefile_post
  # Send Bulk Emails CSV
  # Send bulk merge email. Required Access Level: SendHttp
  # @param merge_email_payload Email data
  # @param [Hash] opts the optional parameters
  # @return [EmailSend]
  describe 'emails_mergefile_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emails_post
  # Send Bulk Emails
  # Send bulk merge email. Required Access Level: SendHttp
  # @param email_message_data Email data
  # @param [Hash] opts the optional parameters
  # @return [EmailSend]
  describe 'emails_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for emails_transactional_post
  # Send Transactional Email
  # Send transactional emails (recipients will be known to each other). Required Access Level: SendHttp
  # @param email_transactional_message_data Email data
  # @param [Hash] opts the optional parameters
  # @return [EmailSend]
  describe 'emails_transactional_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

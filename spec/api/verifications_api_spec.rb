=begin
#Elastic Email REST API

#This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>

The version of the OpenAPI document: 4.0.0
Contact: support@elasticemail.com
Generated by: https://openapi-generator.tech
Generator version: 7.5.0

=end

require 'spec_helper'
require 'json'

# Unit tests for ElasticEmail::VerificationsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'VerificationsApi' do
  before do
    # run before each test
    @api_instance = ElasticEmail::VerificationsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of VerificationsApi' do
    it 'should create an instance of VerificationsApi' do
      expect(@api_instance).to be_instance_of(ElasticEmail::VerificationsApi)
    end
  end

  # unit tests for verifications_by_email_delete
  # Delete Email Verification Result
  # Delete a result with given email if exists. Required Access Level: VerifyEmails
  # @param email Email address to verification
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'verifications_by_email_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for verifications_by_email_get
  # Get Email Verification Result
  # Returns a result of verified email. Required Access Level: VerifyEmails
  # @param email Email address to view verification result of
  # @param [Hash] opts the optional parameters
  # @return [EmailValidationResult]
  describe 'verifications_by_email_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for verifications_by_email_post
  # Verify Email
  # Verify single email address and returns result of verification. Required Access Level: VerifyEmails
  # @param email Email address to verify
  # @param [Hash] opts the optional parameters
  # @return [EmailValidationResult]
  describe 'verifications_by_email_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for verifications_files_by_id_delete
  # Delete File Verification Result
  # Delete Verification Results if they exist. Required Access Level: VerifyEmails
  # @param id ID of the exported file
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'verifications_files_by_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for verifications_files_by_id_result_download_get
  # Download File Verification Result
  # Download verification results as a ZIP file. Required Access Level: VerifyEmails
  # @param id Verification ID to download
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'verifications_files_by_id_result_download_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for verifications_files_by_id_result_get
  # Get Detailed File Verification Result
  # Returns status and results (if verified) of file with given ID. Required Access Level: VerifyEmails
  # @param id ID of the Verification to display status of
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Maximum number of returned email verification results
  # @option opts [Integer] :offset How many result items should be returned ahead
  # @return [VerificationFileResultDetails]
  describe 'verifications_files_by_id_result_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for verifications_files_by_id_verification_post
  # Start verification
  # Start a verification of the previously uploaded file with emails. Required Access Level: VerifyEmails
  # @param id File ID to start verification
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'verifications_files_by_id_verification_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for verifications_files_post
  # Upload File with Emails
  # Uploads a CSV file with list of emails that can then be triggered for verification. An &#39;email&#39; column is required. Required Access Level: VerifyEmails
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file 
  # @return [VerificationFileResult]
  describe 'verifications_files_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for verifications_files_result_get
  # Get Files Verification Results
  # Returns a list of uploaded files, their statuses and results. Required Access Level: VerifyEmails
  # @param [Hash] opts the optional parameters
  # @return [Array<VerificationFileResult>]
  describe 'verifications_files_result_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for verifications_get
  # Get Emails Verification Results
  # Returns a results of all verified single emails. Required Access Level: VerifyEmails
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Maximum number of returned items.
  # @option opts [Integer] :offset How many items should be returned ahead.
  # @return [Array<EmailValidationResult>]
  describe 'verifications_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end

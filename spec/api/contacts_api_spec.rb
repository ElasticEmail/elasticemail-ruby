=begin
#Elastic Email REST API

#This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a href=\"https://api.elasticemail.com/public/help\">here</a>.

The version of the OpenAPI document: 4.0.0
Contact: support@elasticemail.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.0.1

=end

require 'spec_helper'
require 'json'

# Unit tests for ElasticEmail::ContactsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ContactsApi' do
  before do
    # run before each test
    @api_instance = ElasticEmail::ContactsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ContactsApi' do
    it 'should create an instance of ContactsApi' do
      expect(@api_instance).to be_instance_of(ElasticEmail::ContactsApi)
    end
  end

  # unit tests for contacts_by_email_delete
  # Delete Contact
  # Deletes the provided contact. Required Access Level: ModifyContacts
  # @param email Proper email address.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'contacts_by_email_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for contacts_by_email_get
  # Load Contact
  # Load detailed contact information for specified email. Required Access Level: ViewContacts
  # @param email Proper email address.
  # @param [Hash] opts the optional parameters
  # @return [Contact]
  describe 'contacts_by_email_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for contacts_by_email_history_get
  # Load History
  # Returns detailed history of specified Contact. Required Access Level: ViewContacts
  # @param email Proper email address.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Maximum number of returned items.
  # @option opts [Integer] :offset How many items should be returned ahead.
  # @return [Array<ContactHistory>]
  describe 'contacts_by_email_history_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for contacts_by_email_put
  # Update Contact
  # Update selected contact. Omitted contact&#39;s fields will not be changed. Required Access Level: ModifyContacts
  # @param email Proper email address.
  # @param contact_update_payload 
  # @param [Hash] opts the optional parameters
  # @return [Contact]
  describe 'contacts_by_email_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for contacts_delete_post
  # Delete Contacts Bulk
  # Deletes provided contacts in bulk. Required Access Level: ModifyContacts
  # @param emails_payload Provide either rule or a list of emails, not both.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'contacts_delete_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for contacts_export_by_id_status_get
  # Check Export Status
  # Check the current status of the export. Required Access Level: Export
  # @param id ID of the exported file
  # @param [Hash] opts the optional parameters
  # @return [ExportStatus]
  describe 'contacts_export_by_id_status_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for contacts_export_post
  # Export Contacts
  # Request an Export of specified Contacts. Required Access Level: Export
  # @param [Hash] opts the optional parameters
  # @option opts [ExportFileFormats] :file_format Format of the exported file
  # @option opts [String] :rule Query used for filtering.
  # @option opts [Array<String>] :emails Comma delimited list of contact emails
  # @option opts [CompressionFormat] :compression_format FileResponse compression format. None or Zip.
  # @option opts [String] :file_name Name of your file including extension.
  # @return [ExportLink]
  describe 'contacts_export_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for contacts_get
  # Load Contacts
  # Returns a list of contacts. Required Access Level: ViewContacts
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit Maximum number of returned items.
  # @option opts [Integer] :offset How many items should be returned ahead.
  # @return [Array<Contact>]
  describe 'contacts_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for contacts_import_post
  # Upload Contacts
  # Upload contacts from a file. Required Access Level: ModifyContacts
  # @param [Hash] opts the optional parameters
  # @option opts [String] :list_name Name of an existing list to add these contacts to
  # @option opts [String] :encoding_name In what encoding the file is uploaded
  # @option opts [File] :file 
  # @return [nil]
  describe 'contacts_import_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for contacts_post
  # Add Contact
  # Add new Contacts to your Lists. Up to 1000 can be added (for more please refer to the import request). Required Access Level: ModifyContacts
  # @param contact_payload 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :listnames Names of lists to which the uploaded contacts should be added to
  # @return [Array<Contact>]
  describe 'contacts_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
